Portal Pass

This is our test repository for the 'lock' code of Portal Pass

It pairs with an android app to provice remote control to your home,
generate QR code guest keys and do video calling / surveillence.
There is also a video doorbell summon can use to notify the phone and request access

It can talk commands from trusted android hosts to make a QR, Lock, Unlock, etc
This will run headless.

This is meant to be run in an (ARCH) Linux VM running inside a host desktop.
It must have an ARDUINO USB and a WEBCAM forwarded to it for full functionality.

The VM can double to do other things for your home network, like run pihole.
We recommend installing the VM in VirtualBox. Ensure you also have VirtualBox
Extension Pack installed to forward webcams and USB 2.0+

lockReceiver runs as a daemon, and will summon zbar, lockControl.py, and video calling as needed.
lockSender can be run spontaneously to send messages like video requests that arent a reply to android.

Manual interventual is needed the first time lockReceiver is ran to import the Android's 
Openssl keys

Each Subfolder with significant code will have its own README to describe the API and functionality

src/     is primarily c++ code to do encryption & signalling
video/   is primarily javascript to do video calling
script/  has sub folders qr_scripts/ and lockControl/ which 
         gen & valid QR and manage the arduino respectively

UNLOCK CONDTIONS:
1) Android Presses Unlock
2) Anyone scans a QR with valid conditions
3) Internal button to exit

----------------------------------------------------------------------------------

INSTALLATION:

Steps:

1) Make a virtual Machine with archlinux and do a clean, minimal install
https://wiki.archlinux.org/index.php/Installation_guide

2) Make a non-root user with admin privledges (put them in group wheel, and use visudo, etc)

3) Install git and base-devel

4) Clone this repo into ~/PORTAL_PASS_TEST

5) agora_Signaling does not want us to distribute their shared objet file on git
Please go to their website and donwload it and copy it to lib/libagora.so
https://docs.agora.io/en/2.4/download
<either through scp, starting X with firefox, or a cli brownset like links)

6) run ./install.sh to install missing dependancies, and make configurations

7) further details are available in configs/library_setup.txt

Configuration files will go in ~/.config/PORTAL_PASS/, a directory that will automatically
be generated by the install script.

-----------------------------------------------------------------------------------

SETUP:

Users must provide their own setup.txt, which contains 
their agora login credentials, and place it in ~/.config/PORTAL_PASS/

the APPID must be shared with all devices who want to communicate with one another
The SERIAL must be unique for each sender/receiver

START setup.txt

APPID=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
SERIAL=################################

END setup.txt

[ 32 characters each ]

The first and second 16 characters of SERIAL must be distinct.

The SERIAL can cointain any printable ASCII except ':' and '#'

A sample setup.txt is in src, and will automatically be copied into ~/.config/PORTAL_PASS/ 
if there is no setup.txt in that folder

You can register for an appid at agora or we can help you with product installation